#!/usr/bin/node

var request = require('request');

var slack_token = 'dBiwpc9oRtRuN9jQYitl9Y27';


var repo = process.argv[2];
var revision = process.argv[3].toString();

var splitByFile = function (diff) {

	var filename;
	var isEmpty = true;
	var files = {};
	diff.split("\n").forEach(function (line, i) {

		// Unmerged paths, and possibly other non-diffable files
		// https://github.com/scottgonzalez/pretty-diff/issues/11
		if (!line || line.charAt(0) === "*") {
			return;
		}

		if (['Modif', 'Added', 'Remove'].indexOf(line.substring(0, 5)) > -1) {
			isEmpty = false;
			filename = line.replace('Modified: ', '').replace('Added:', '').trim();
			files[filename] = [];
		}
		if (filename)
			files[filename].push(line);
	});

	return isEmpty ? [] : files;

};




// stub comment
// another stub
var execFile = require('child_process').execFile;
var child = execFile('/usr/bin/svnlook', ['log', repo, '--revision', revision], (error, stdout, stderr) => {
	if (error) {
		throw error;
	}
	const log = stdout.trim();
	var child = execFile('/usr/bin/svnlook', ['author', repo, '--revision', revision], (error, stdout, stderr) => {
		if (error) {
			throw error;
		}
		const author = stdout.trim();
		const child = execFile('/usr/bin/svnlook', ['diff', repo, '--revision', revision], (error, stdout, stderr) => {
			const diff = stdout;
			const child = execFile('/usr/bin/svnlook', ['date', repo, '--revision', revision], (error, stdout, stderr) => {
				const datetime = new Date(stdout.slice(0, 19)).getTime();
				var tasks = log.match(/(#[0-9.]*)/ig);
				var task_id = '';
				if (tasks && tasks.length > 0) {
					task_id = tasks[0].replace('#', '');
				}

				// build some metadata from the diff
				var split = splitByFile(diff);
				var files = [],
					changed = 0,
					removed = 0,
					total_changed = 0,
					total_removed = 0;
				for (var f in split) {
					changed = 0;
					removed = 0;
					for (var line in split[f]) {
						if (['---', '+++'].indexOf(split[f][line].substring(0, 3)) > -1) {
							continue;
						}
						if (split[f][line].charAt(0) == '+')
							changed++;
						if (split[f][line].charAt(0) == '-')
							removed++;
					}
					files.push({
						file: f,
						changed: changed,
						removed: removed
					});
					total_changed += changed;
					total_removed += removed;
				}




				// Now I need to post it all to roadtrip
				request.post('http://127.0.0.1:3000/roadtrip/roadtrip//roadtrip/revisions', {
					json: {
						revision: process.argv[3],
						log: log,
						author: author,
						diff: diff,
						datetime: datetime,
						repository: '56fe9a014b88de4618e306c7',
						changed: total_changed,
						removed: total_removed,
						diff_meta: files, // test
						task_id: task_id
					}
				});

				// Tell slack after we tell roadtrip
				url = "https://telegauge.slack.com/services/hooks/subversion?token=" + slack_token;
				viewurl = 'http://127.0.0.1:3000/roadtrip/roadtrip//#repositories/Main/' + process.argv[3];
				request.post(url, {
					form: {
						payload: JSON.stringify({
							log: log.trim(),
							author: author.trim(),
							revision: process.argv[3],
							url: viewurl
						})
					}
				});

			});
		});

	});
});
